---
title: Graph Data Model for Timebling
execute: 
  enabled: false
lightbox:
  match: auto
  effect: fade
  desc-position: bottom
  loop: false
  
---

::: callout-warning
## TODO

-   write up section - review notes
-   new page of difficulties with time - see poc2 time
-   appendix with queries (queries.ipynb (graph-project\docs\notes\queries.ipynb)) - copy all queries onto one appendix see graph-tt
:::

Having discussed some advantages of graph databases for representing interconnected data, this section delves into the specifics of a proposed graph data model tailored for university timetabling. This model serves as the foundation for exploring graph-based analysis and its potential to unlock valuable insights.

## An Iterative Approach

The design of this graph data model was iterative: design, build, test, review, and revise -\> ...and repeat. Using Neo4j Desktop and an Aura cloud instance, the first model was small scope in scope, incorporating minimal nodes and properties. This iterative approach allows for flexibility and refinement based on real-world data and evolving requirements.

## Core Nodes - Building Blocks

At its core, the timetable model revolves around four key entities represented as nodes:


:::{.table}
| Node     | Property    | Description           | Data Type |
|----------|-------------|-----------------------|-----------|
| Student  | firstName   | Legal first name      | string    |
|          | lastName    | Legal last name       | string    |
|          | studentID   | University identifier | integer   |
|          | splusID     | Timetable URN         | string    |
| Lecturer | firstName   | First name            | string    |
|          | lastName    | Last name             | string    |
|          | staffID     | University identifier | integer   |
|          | splusID     | Timetable URN         | string    |
| Room     | name        | Room name             | string    |
|          | splusID     | Timetable URN         | integer   |
| Activity | name        | Activity name         | string    |
|          | description | Activity description  | string    |
|          | startTime   | Scheduled start time  | datetime  |
|          | endTime     | Scheduled end time    | datetime  |
|          | date        | Date of activity      | date      |

:::

![Neo4j Interface showing basic nodes and properties](./images/poc1-import-interface.png){width=75%}

## Relationships - Connecting the Dots

These core nodes are interconnected through relationships that reflect the dynamics of a timetable:

-   Student-**\[IS_ALLOCATED_TO\]**-\>Activity
-   Staff-**\[TEACHES_ON\]**-\>Activity
-   Activity-**\[TAKES_PLACE_IN\]**-\>Room

![Core Nodes and Properties](./images/v1-core-nodes-rels-prop.png){width=75%}
