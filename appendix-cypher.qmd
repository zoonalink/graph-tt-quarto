---
title: "Cypher Queries"
---
<br>
These pages collate the Cypher queries used in the development of this prototype. The queries are grouped by the type of operation they perform, such as creating nodes, relationships, or querying the graph. The queries are presented in a format that can be copied and pasted directly into a Neo4j browser or other Cypher-compatible interface.

They represent a starting point for further exploration and development of the graph database. The queries are not exhaustive, and there are many more possibilities for querying and analysing the data.

## Constraints

Constraints in Neo4j are used to enforce rules on the graph data, such as ensuring that certain properties are unique or that nodes have specific properties. Constraints can be used to maintain data integrity and prevent duplicate or inconsistent data.

![Constraints](./images/cypher-constraint.png)

## Indexes

Indexes in Neo4j are used to speed up queries by allowing the database to quickly locate nodes or relationships based on a property value.

Search performance indexes include `RANGE`, `FULLTEXT`, and `POINT`. Range indexes are the default and support most queries. Text indexes, like FULLTEXT, are used for `string` based searches and optimised for queries containing operators like `CONTAINS` or `STARTS WITH`. Point indexes are used for spatial queries and are optimised for `latitude` and `longitude` properties.

```{python}
from connect_to_neo4j_db import connect_to_neo4j
from neo4j import GraphDatabase

# connect to Neo4j
driver = connect_to_neo4j()

# session
session = driver.session()

# run query
query = """
SHOW INDEXES;
"""
print("Running query...\n")
result = session.run(query)
for record in result:
    print(record)
    
```


### Creating Indexes

``` cypher
// General syntax
CREATE INDEX FOR (n:NodeLabel) ON (n.propertyName)

// Examples
CREATE INDEX FOR (a:activity) ON (a.actStartDate);
CREATE INDEX FOR (a:activity) ON (a.actStartTime);
CREATE INDEX FOR (a:activity) ON (a.actEndTime);
CREATE INDEX FOR (a:activity) ON (a.actModSplusID);
CREATE INDEX FOR (a:activity) ON (a.id);
// composite index for clashes
CREATE INDEX activity_clash_index FOR (a:activity) ON (a.actStartDate, a.actStartTime, a.actEndTime);

CREATE INDEX FOR (r:room) ON (r.roomName);
CREATE INDEX FOR (r:room) ON (r.roomLatitude);
CREATE INDEX FOR (r:room) ON (r.roomLongitude);

CREATE SPATIAL INDEX room_location_index FOR (r:demoRoom) ON (r.location)
CREATE SPATIAL INDEX demoroom_location_index FOR (r:room) ON (r.location)
```